---

- name: Enable Lustre server repos
  tags: yum
  yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.name }}"
    baseurl: "{{ item.url }}"
    gpgkey: "{{ item.gpgkey | default(omit) }}"
    gpgcheck: "{{ item.gpgcheck | default(omit) }}"
    enabled: "{{ item.enabled | default(omit) }}"
    exclude: "{{ item.exclude | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
  with_items: "{{ lustre_repos | default({}) }}"

- name: Install Lustre server packages
  tags: yum
  yum:
    name: "{{ lustre_server_packages }}"
    state: latest

- name: Let's create Lustre OST directories
  file:
    path: "{{ item.dir }}"
    state: "directory"
  tags: ost
  loop: "{{ osts[inventory_hostname] }}"

- name: Lets make sure journal-volumes exists
  tags: ost, mkfs
  lvol: 
    lv: "lv_ost{{ item.index }}"
    vg: "vgroot"
    state: present
    size: 4G
  loop: "{{ osts[inventory_hostname] }}"

- name: Lets create OST filesystems
  shell: | 
    {{ mkfs }} {{ fsname }} {{ mgs }} --ost --index={{ item.index }} {{ item.dev }}
  tags: ost, mkfs
  loop: "{{ osts[inventory_hostname] }}"
  debugger: on_failed
  when: not ansible_device_links.labels[item.dev[5:]][0] is search( '.*lustre:OST.*' )
# .labels contains array of labels for blockdevice
# so we only create new fs, when it doesn't already contain lustre-OST in label
 
#- name: Lustre modprobe.d confings
#  template: src=lustre.conf.j2 dest=/etc/modprobe.d/lustre.conf
#            owner=root group=root mode=0644
#
#- name: Lustre lnet config
#  template: src=lnet.conf.j2 dest=/etc/lnet.conf
#            owner=root group=root mode=0644
#
#- name: Enable lnet systemd service
#  systemd:
#    name: lnet
#    state: started
#    enabled: True
#
#- name: Check Lustre networks
#  command: /usr/sbin/ip link show {{ item }}
#  with_items: "{{ lustre_network_devices|default([]) }}"
#  register: lustre_networks
#  failed_when: False
#  changed_when: lustre_networks.rc != 0
#  when: ansible_connection != 'chroot'
#
